Add password and clean up tests - Text lecture
Section 5, Lecture 100
In your gemfile, uncomment the line that says this:
gem 'bcrypt', '~> 3.1.7'

save it and run:
bundle install --without production

Now pull up your chef model and add in the following:
has_secure_password

Now create a new migration file to add password_digest to the chefs table:
rails generate migration add_password_digest_to_chefs

Pull up the migration file and add the following line inside the change method:
add_column :chefs, :password_digest, :string

Save it and run the migration:
rails db:migrate

Now hop on the rails console and test out by adding password and using the authenticate method to verify that the password saved is working, example:
chef = Chef.last
chef.password = "password"
chef.save

Then authenticate by using:
chef.authenticate("password")

should return the chef object

Now add two tests to the chef_test.rb under test/models folder:
  test "password should be present" do
    @chef.password = @chef.password_confirmation = " "
    assert_not @chef.valid?
  end
  
  test "password should be atleast 5 character" do
    @chef.password = @chef.password_confirmation = "x" * 4
    assert_not @chef.valid?
  end

Add the following validation to your chef model to make the tests pass:
validates :password, presence: true, length: { minimum: 5 }

Clean up all the setup methods in your tests to include password and password_confirmation wherever you are creating chefs, so they should all look like below (I have 3 recipe tests under integration and 2 model tests for chef and recipe which required this update):

chef_test model:
@chef = Chef.new(chefname: "mashrur", email: "mashrur@example.com",
                    password: "password", password_confirmation: "password")

recipe test model and integration tests:
@chef = Chef.create!(chefname: "mashrur", email: "mashrur@example.com",
                    password: "password", password_confirmation: "password")

Make sure all tests pass